#!/bin/bash
set -e

MID_HOME="/opt/agent"
CONF_FILE="${MID_HOME}/config.xml"
CONF_FILE_ORIGIN="/opt/config.xml"

# Mandatory ENV
SN_URL=${SN_URL:-}
SN_USER=${SN_USER:-}
SN_PASSWD=${SN_PASSWD:-}
SN_MID_NAME=${SN_MID_NAME:-}

#Define cleanup procedure
cleanup() {
    echo "Container stopped, performing cleanup..."
    /opt/agent/bin/mid.sh stop
    echo "MID server stoped"
}

#Trap SIGTERM
trap 'cleanup' TERM
trap 'cleanup' INT

checkConf () {
  echo "Checking configuration"
  if [ ! -e $CONF_FILE ]
    then
      echo "Config file $CONF_FILE does not exist."
      cp $CONF_FILE_ORIGIN $CONF_FILE
      generateConf
    else
      echo "Config file $CONF_FILE exists."
  fi
}

generateConf () {
  # Set config
  echo "Configuring $CONF_FILE"
  sed 's/YOUR_MIDSERVER_NAME_GOES_HERE/'"${SN_MID_NAME}"'/' -i $CONF_FILE
  sed 's/YOUR_INSTANCE_USER_NAME_HERE/'"${SN_USER}"'/' -i $CONF_FILE
  sed 's/YOUR_INSTANCE_PASSWORD_HERE/'"${SN_PASSWD}"'/' -i $CONF_FILE
  sed 's/YOUR_INSTANCE/'"${SN_URL}"'/' -i $CONF_FILE
}

midStart () {
  checkConf
  # start supervisord
  echo "Starting supervisord..."
  exec /usr/bin/supervisord -c /opt/supervisord.conf

}

midSetup () {
  checkConf
  cat $CONF_FILE
  echo ""
}

midHelp () {
  echo "Available options:"
  echo " mid:start          - Starts the mid server (default)"
  echo " mid:setup          - Generate config.xml"
  echo " mid:help           - Displays the help"
  echo " [command]          - Execute the specified linux command eg. bash."
}

case "$1" in
  mid:start)
    midStart
    ;;
  mid:setup)
    midSetup
    ;;
  mid:help)
    midHelp
    ;;
  *)
    if [ -x $1 ]; then
      $1
    else
      prog=$(which $1)
      if [ -n "${prog}" ] ; then
        shift 1
        $prog $@
      else
        midHelp
      fi
    fi
    ;;
esac

exit 0